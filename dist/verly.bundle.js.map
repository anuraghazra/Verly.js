{
  "version": 3,
  "sources": ["../src/Utils.js", "../src/Mouse.js", "../src/Verly.js", "../src/Vector.js", "../src/Point.js", "../src/Stick.js", "../src/AngleStick.js", "../node_modules/uuid/dist/esm-browser/rng.js", "../node_modules/uuid/dist/esm-browser/stringify.js", "../node_modules/uuid/dist/esm-browser/native.js", "../node_modules/uuid/dist/esm-browser/v4.js", "../src/Entity.js", "../src/TypoGraphy.js", "../src/app.js"],
  "sourcesContent": ["/**\n * @method normalizedRandom\n */\nexport const normalizedRandom = function () {\n  return Math.random() * 2 - 1;\n};\n\n/**\n * @method clamp\n * @param {number} value\n * @param {number} min\n * @param {number} max\n */\nexport const clamp = function (value, min, max) {\n  return Math.max(min, Math.min(value, max));\n}\n/**\n * @method random\n */\nexport const random = function (rand, min, max) {\n  //one param\n  if (arguments.length === 1) {\n    return Math.random() * arguments[0];\n  } else if (arguments.length == 2) {\n    //min and max\n    max = min;\n    min = rand;\n    rand = Math.random;\n  }\n  if (!min && !max) {\n    return Math.random();\n  } else if (!max) {\n    //if only one is provided, then thats actually the max\n    max = min;\n    return rand() * max;\n  }\n  return rand() * (max - min) + min;\n};\n/**\n * @method lerp\n * @param {number} a\n * @param {number} b\n * @param {number} p\n */\nexport const lerp = function (a, b, p) {\n  return (b - a) * p + a;\n}\n\n/**\n * Convert from degrees to radians.\n * @method radians\n * @param {number} degrees\n */\nexport const radians = function(degrees) {\n  return degrees * Math.PI / 180;\n}\n\n/**\n * Convert from radians to degrees.\n * @method degrees\n * @param {number} radians\n */\nexport const degrees = function(radians) {\n\treturn radians * 180 / Math.PI;\n}", "export default class Mouse {\n  constructor(entities, canvas, ctx) {\n    this.entities = entities;\n    // Drag Interaction\n    this.draggedPoint = null;\n    this.down = false;\n    this.coord = new Vector();\n    this.offset = new Vector();\n    this.offsetCoord = new Vector();\n    this.canvas = canvas;\n    this.ctx = ctx;\n\n    this.canvas.addEventListener('mousedown', (e) => {\n      this.down = true;\n      if (this.draggedPoint) {\n        this.offset.setXY(e.offsetX - this.draggedPoint.pos.x, e.offsetY - this.draggedPoint.pos.y);\n        this.offsetCoord = Vector.sub(this.coord, this.offset);\n      }\n    })\n    this.canvas.addEventListener('mouseup', (e) => {\n      if (this.draggedPoint) {\n        this.draggedPoint.resetVelocity();\n      };\n      this.down = false;\n      this.draggedPoint = null;\n    })\n\n    this.canvas.addEventListener('mousemove', (e) => {\n      this.coord.setXY(e.offsetX, e.offsetY);\n      this.offsetCoord = Vector.sub(this.coord, this.offset);\n    })\n\n    // TOUCH\n    this.canvas.addEventListener('touchstart', (e) => {\n      let offset = e.touches[0];\n      this.down = true;\n      if (this.draggedPoint) {\n        this.offset.setXY(offset.clientX - this.draggedPoint.pos.x, offset.clientY - this.draggedPoint.pos.y);\n        this.offsetCoord = Vector.sub(this.coord, this.offset);\n      }\n    })\n    this.canvas.addEventListener('touchend', (e) => {\n      if (this.draggedPoint) {\n        this.draggedPoint.resetVelocity();\n      };\n      this.down = false;\n      this.draggedPoint = null;\n    })\n    this.canvas.addEventListener('touchmove', (e) => {\n      let offset = e.touches[0];\n      this.coord.setXY(offset.pageX, offset.pageY);\n      this.offsetCoord = Vector.sub(this.coord, this.offset);\n    })\n  }\n\n  dragPoint() {\n    if (!this.down) return;\n    this.draggedPoint.pos.setXY(this.offsetCoord.x, this.offsetCoord.y);\n  }\n\n  drag() {\n    if (!this.down) {\n      this.draggedPoint = this.getNearestPoint();\n    }\n    if (this.draggedPoint) {\n      this.renderDraggedPoint(this.draggedPoint);\n      this.dragPoint();\n    }\n  }\n  \n  renderDraggedPoint(point) {\n    this.ctx.beginPath();\n    this.ctx.strokeStyle = 'black';\n    this.ctx.arc(point.pos.x, point.pos.y, point.radius * 1.5, 0, Math.PI * 2);\n    this.ctx.stroke();\n    this.ctx.closePath();\n  }\n\n\n  getNearestPoint() {\n    // if (!this.down) return false;\n    let d = 20;\n    let p = null;\n    for (let k = 0; k < this.entities.length; k++) {\n      for (let i = 0; i < this.entities[k].points.length; i++) {\n        let dist = this.entities[k].points[i].pos.dist(this.coord);\n        if (dist < d) {\n          p = this.entities[k].points[i];\n        }\n      }\n    }\n    return p;\n  }\n}\n", "import Mouse from \"./Mouse\";\n\n/**\n * @class Verly\n * @version 1.3.0\n * @author <hazru.anurag@gmail.com>\n */\nclass Verly {\n  /**\n   *\n   * @param {Number} iterations\n   * @param {HTMLCanvasElement} canvas\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  constructor(iterations, canvas, ctx) {\n    this.entities = [];\n    this.iterations = iterations;\n    this.currentFrame = 0;\n    this.canvas = canvas;\n    this.WIDTH = canvas.width;\n    this.HEIGHT = canvas.height;\n    this.ctx = ctx;\n    this.mouse = new Mouse(this.entities, this.canvas, this.ctx);\n  }\n\n  /**\n   * sets the canvas DPI for better rendering quality\n   */\n  setDPI() {\n    // Set up CSS size.\n    this.canvas.style.width =\n      this.canvas.style.width || this.canvas.width + \"px\";\n    this.canvas.style.height =\n      this.canvas.style.height || this.canvas.height + \"px\";\n\n    // Get size information.\n    var scaleFactor = window.devicePixelRatio / 1;\n    var width = parseFloat(this.canvas.style.width);\n    var height = parseFloat(this.canvas.style.height);\n\n    // Backup the this.canvas contents.\n    var oldScale = this.canvas.width / width;\n    var backupScale = scaleFactor / oldScale;\n    var backup = this.canvas.cloneNode(false);\n    backup.getContext(\"2d\").drawImage(this.canvas, 0, 0);\n\n    // Resize the this.canvas.\n    this.canvas.width = Math.ceil(width * scaleFactor);\n    this.canvas.height = Math.ceil(height * scaleFactor);\n\n    // Redraw the this.canvas image and scale future draws.\n    this.ctx.setTransform(backupScale, 0, 0, backupScale, 0, 0);\n    this.ctx.drawImage(backup, 0, 0);\n    this.ctx.setTransform(scaleFactor, 0, 0, scaleFactor, 0, 0);\n  }\n\n  /**\n   * @param  {...Entity} args\n   * @description Joins two Entity Class Together\n   *\n   * @example\n   * let canvas = document.getElementById('c');\n   * let ctx = canvas.getContext('2d');\n   * let width = canvas.width = 600;\n   * let height = canvas.height = 500;\n   *\n   * let verly = new Verly(16, canvas, ctx);\n   * let box = verly.createBox(100, 100, 100, 100);\n   * let rope = verly.createRope(100, 100, 15, 10, 0);\n   *\n   * // verly.joinEntities(...Entity)\n   * let mix = verly.joinEntities(box, rope);\n   * mix.addStick(0, 18, 20)\n   *\n   * function animate() {\n   *  ctx.clearRect(0, 0, width, height);\n   *\n   *  verly.update();\n   *  verly.render();\n   *  verly.interact();\n   *  verly.renderPointIndex();\n   *\n   *  requestAnimationFrame(animate);\n   * }\n   * animate();\n   *\n   */\n  joinEntities(...args) {\n    let mixEntity = new Entity(this.iterations, this);\n\n    let points = [];\n    let sticks = [];\n\n    // loop through the args and push points and sticks to the array\n    for (let i = 0; i < args.length; i++) {\n      points.push(args[i].points);\n      sticks.push(args[i].sticks);\n\n      // get the index which item we should splice in [this.entities]\n      let index = this.entities.indexOf(args[i]);\n      this.entities.splice(index, 1);\n    }\n\n    // join multiple arrays\n    points = [].concat.apply([], points);\n    sticks = [].concat.apply([], sticks);\n\n    // add the arrays to the mix::Entity\n    mixEntity.points = points;\n    mixEntity.sticks = sticks;\n\n    // add the mix::Entity to [this.entities]\n    this.addEntity(mixEntity);\n    return mixEntity; // return for chaining\n  }\n\n  /**\n   * @param {Entity} e\n   */\n  addEntity(e) {\n    e.setupAccessibility();\n    this.entities.push(e);\n  }\n\n  /**\n   * drags points\n   */\n  interact() {\n    this.mouse.drag();\n  }\n\n  /**\n   * updates all the physics stuff\n   */\n  update() {\n    for (let i = 0; i < this.entities.length; i++) {\n      this.entities[i].update();\n    }\n\n    this.currentFrame++;\n  }\n\n  /**\n   */\n  renderPointIndex() {\n    for (let i = 0; i < this.entities.length; i++) {\n      this.entities[i].renderPointIndex(this.ctx);\n    }\n  }\n\n  /**\n   * renders all the entity\n   */\n  render() {\n    for (let i = 0; i < this.entities.length; i++) {\n      this.entities[i].render(this.ctx);\n    }\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} w\n   * @param {number} h\n   */\n  createBox(x, y, w, h) {\n    const box = new Entity(this.iterations, this, \"Box\");\n    box.addPoint(x, y, 0, 0);\n    box.addPoint(x + w, y, 0, 0);\n    box.addPoint(x + w, y + h, 0, 0);\n    box.addPoint(x, y + h, 0, 0);\n    box.addStick(0, 1);\n    box.addStick(1, 2);\n    box.addStick(2, 3);\n    box.addStick(3, 0);\n    box.addStick(3, 1);\n    this.addEntity(box);\n    return box;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} segments\n   * @param {number} radius=50\n   * @param {number} stride1=1\n   * @param {number} stride2=5\n   */\n  createHexagon(x, y, segments, radius = 50, stride1 = 1, stride2 = 5) {\n    const hexagon = new Entity(this.iterations, this, \"Hexagon\");\n\n    let stride = (2 * Math.PI) / segments;\n\n    // points\n    for (let i = 0; i < segments; ++i) {\n      let theta = i * stride;\n      hexagon.addPoint(\n        x + Math.cos(theta) * radius,\n        y + Math.sin(theta) * radius,\n        0,\n        0\n      );\n    }\n\n    let center = hexagon.addPoint(x, y, 0, 0);\n\n    // sticks\n    for (let i = 0; i < segments; ++i) {\n      hexagon.addStick(i, (i + stride1) % segments);\n      hexagon.addStick(new Stick(hexagon.points[i], center));\n      hexagon.addStick(i, (i + stride2) % segments);\n    }\n\n    this.addEntity(hexagon);\n    return hexagon;\n  }\n\n  /**\n   * @param {number} posx\n   * @param {number} posy\n   * @param {number} w\n   * @param {number} h\n   * @param {number} segments\n   * @param {number} pinOffset\n   */\n  createCloth(posx, posy, w, h, segments, pinOffset) {\n    let cloth = new Entity(this.iterations, this, \"Cloth\");\n\n    let xStride = w / segments;\n    let yStride = h / segments;\n\n    let x, y;\n    for (y = 0; y < segments; ++y) {\n      for (x = 0; x < segments; ++x) {\n        let px = posx + x * xStride - w / 2 + xStride / 2;\n        let py = posy + y * yStride - h / 2 + yStride / 2;\n        cloth.addPoint(px, py);\n\n        if (x > 0) {\n          cloth.addStick(y * segments + x, y * segments + x - 1);\n        }\n\n        if (y > 0) {\n          cloth.addStick(y * segments + x, (y - 1) * segments + x);\n        }\n      }\n    }\n\n    // as the name suggest\n    function tear(threshold) {\n      for (let i = 0; i < cloth.sticks.length; i++) {\n        // find the distance between two points\n        let dist = cloth.sticks[i].startPoint.pos.dist(\n          cloth.sticks[i].endPoint.pos\n        );\n        if (dist > (threshold || 20)) {\n          // remove if the dist is > than threshold\n          cloth.removeSticks(cloth.sticks[i].startPoint);\n        }\n      }\n    }\n\n    cloth.tear = tear;\n\n    for (x = 0; x < segments; ++x) {\n      if (x % pinOffset == 0) {\n        // magic\n        cloth.pin(x);\n      }\n    }\n\n    !this.dontPush && this.addEntity(cloth);\n    return cloth;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} segments=10\n   * @param {number} gap=15\n   * @param {number} pin=0\n   */\n  createRope(x, y, segments = 10, gap = 15, pin) {\n    let rope = new Entity(this.iterations, this, 'Rope');\n\n    for (let i = 0; i < segments; i++) {\n      rope.addPoint(x + i * gap, y, 0, 0);\n    }\n\n    for (let i = 0; i < segments - 1; i++) {\n      rope.addStick(i, (i + 1) % segments);\n    }\n\n    if (pin !== undefined) {\n      rope.pin(pin);\n    }\n    this.addEntity(rope);\n    return rope;\n  }\n\n  createRagdoll(x0, y0) {\n    let ragdoll = new Entity(this.iterations, this, 'Ragdoll');\n\n    // Head\n    ragdoll.addPoint(x0, y0).setRadius(15).setMass(5);\n\n    // Groin\n    ragdoll.addPoint(x0, y0 + 100);\n\n    // Hips\n    ragdoll.addPoint(x0 + 30, y0 + 90);\n    ragdoll.addPoint(x0 - 30, y0 + 90);\n\n    // Knees\n    ragdoll.addPoint(x0 + 20, y0 + 150);\n    ragdoll.addPoint(x0 - 20, y0 + 150);\n\n    // Feet\n    ragdoll\n      .addPoint(x0 + 30, y0 + 190)\n      .setRadius(10)\n      .setMass(20);\n    ragdoll\n      .addPoint(x0 - 30, y0 + 190)\n      .setRadius(10)\n      .setMass(20);\n\n    // Neck\n    ragdoll.addPoint(x0, y0 + 25);\n\n    // Shoulders\n    ragdoll.addPoint(x0 + 25, y0 + 30);\n    ragdoll.addPoint(x0 - 25, y0 + 30);\n\n    // Hands\n    ragdoll\n      .addPoint(x0 + 15, y0 + 105)\n      .setRadius(10)\n      .setMass(5);\n    ragdoll\n      .addPoint(x0 - 15, y0 + 105)\n      .setRadius(10)\n      .setMass(5);\n\n    // \"Muscles\"\n    // Head - shoulders\n    ragdoll.addStick(0, 9);\n    ragdoll.addStick(0, 10);\n    // Shoulder - shoulder\n    ragdoll.addStick(9, 10);\n\n    // Shoulders - hips\n    ragdoll.addStick(9, 2);\n    ragdoll.addStick(10, 3);\n    // Shoulders - hips opposite side\n    ragdoll.addStick(9, 3);\n    ragdoll.addStick(10, 2);\n\n    // Hips - feet\n    ragdoll.addStick(2, 6);\n    ragdoll.addStick(3, 7);\n\n    // Hips - feet, opposite\n    ragdoll.addStick(2, 7);\n    ragdoll.addStick(3, 6);\n\n    // Head - groin\n    ragdoll.addStick(0, 1);\n\n    // Hip - hip\n    ragdoll.addStick(2, 3);\n    // Shoulder - hip\n    ragdoll.addStick(9, 2);\n    ragdoll.addStick(10, 3);\n\n    // Head - knee\n    ragdoll.addStick(0, 4);\n    // Head - knee\n    ragdoll.addStick(0, 5);\n\n    // Head feet\n    ragdoll.addStick(0, 6);\n    ragdoll.addStick(0, 7);\n\n    // Body parts\n    // Hips\n    ragdoll.addStick(1, 2);\n    ragdoll.addStick(1, 3);\n    // Legs\n    ragdoll.addStick(2, 4);\n    ragdoll.addStick(3, 5);\n    ragdoll.addStick(4, 6);\n    ragdoll.addStick(5, 7);\n\n    ragdoll.addStick(0, 8);\n    ragdoll.addStick(8, 1);\n\n    // Left arm\n    ragdoll.addStick(8, 9);\n    ragdoll.addStick(9, 11);\n\n    // Right arm\n    ragdoll.addStick(8, 10);\n    ragdoll.addStick(10, 12);\n\n    this.addEntity(ragdoll);\n    return ragdoll;\n  }\n}\n\nexport default Verly;\n", "/**\n * @class Vector\n * @version v1.0.0\n * @author Anurag Hazra\n * @param {number} x\n * @param {number} y\n */\nclass Vector {\n\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  /**\n   * get distance from two vectors\n   * @param {Vector} v1 \n   * @param {Vector} v2 \n   * @return {number}\n   */\n  static dist(v1, v2) {\n    return v1.dist(v2);\n  }\n\n  /**\n   * get distance squared from two vectors \n   * @param {Vector} v1 \n   * @param {Vector} v2 \n   * @return {number}\n   */\n  static distSq(v1, v2) {\n    return v1.distSq(v2);\n  }\n\n  /**\n   * subtract two vectors\n   * @param {Vector} v1 \n   * @param {Vector} v2 \n   * @return {Vector}\n   */\n  static sub(v1, v2) {\n    return new Vector(v1.x - v2.x, v1.y - v2.y);\n  }\n\n  /**\n   * add two vectors\n   * @param {Vector} v1 \n   * @param {Vector} v2 \n   * @return {Vector}\n   */\n  static add(v1, v2) {\n    return new Vector(v1.x + v2.x, v1.y + v2.y);\n  }\n\n  /**\n   * create vector from angle\n   * @param {number} angle \n   */\n  static fromAngle(angle) {\n    let v = new Vector(0, 0);\n    v.x = Math.cos(angle);\n    v.y = Math.sin(angle);\n    return v;\n  }\n\n  /**\n   * create random2d vector\n   * @return {Vector}\n   */\n  static random2D() {\n    return Vector.fromAngle(Math.random() * Math.PI * 180);\n  }\n\n  /**\n   * adds random jitter motion\n   * @param {number} a \n   * @param {number} b \n   * @return {Vector}\n   */\n  jitter(a, b) {\n    var v = new Vector(a, b);\n    this.x += normalizedRandom() * v.x;\n    this.y += normalizedRandom() * v.y;\n    return this;\n  }\n\n  /**\n   * add this vector to another vector\n   * @param {Vector|number} x \n   * @param {Number} y \n   * @return {Vector}\n   */\n  add(x, y) {\n    if (arguments.length === 1) {\n      this.x += x.x;\n      this.y += x.y;\n    } else if (arguments.length === 2) {\n      this.x += x;\n      this.y += y;\n    }\n    return this;\n  }\n\n  /**\n   * subtracts this vector to another vector\n   * @param {Vector|number} x \n   * @param {Number} y \n   * @return {Vector}\n   */\n  sub(x, y) {\n    if (arguments.length === 1) {\n      this.x -= x.x;\n      this.y -= x.y;\n    } else if (arguments.length === 2) {\n      this.x -= x;\n      this.y -= y;\n    }\n    return this;\n  }\n\n  /**\n   * multiply this vector to a scalar value or a vector\n   * @param {Vector|number} v \n   * @return {Vector}\n   */\n  mult(v) {\n    if (typeof v === 'number') {\n      this.x *= v;\n      this.y *= v;\n    } else {\n      this.x *= v.x;\n      this.y *= v.y;\n    }\n    return this;\n  }\n\n  /**\n   * divide this vector to a scalar value or a vector\n   * @param {Vector|number} v \n   * @return {Vector}\n   */\n  div(v) {\n    if (typeof v === 'number') {\n      this.x /= v;\n      this.y /= v;\n    } else {\n      this.x /= v.x;\n      this.y /= v.y;\n    }\n    return this;\n  }\n\n  /**\n   * set this vectors angle\n   * @param {number} angle \n   */\n  setAngle(angle) {\n    var len = this.mag();\n    this.x = Math.cos(angle) * len;\n    this.y = Math.sin(angle) * len;\n  }\n\n  /**\n   * get the angle thia and given vector\n   * @param {Vector} v \n   * @returns {number}\n   */\n  angle(v) {\n    return Math.atan2(this.x * v.y - this.y * v.x, this.x * v.x + this.y * v.y);\n  }\n\n  /**\n   * @param {Vector} vLeft \n   * @param {Vector} vRight\n   * @returns {Vector} \n   */\n  angle2(vLeft, vRight) {\n    return Vector.sub(vLeft, this).angle(Vector.sub(vRight, this));\n  }\n\n  /**\n   * rotate this vector by some origin and angle\n   * @param {Vector} origin \n   * @param {theta} theta \n   * @returns {Vector}\n   */\n  rotateBy(origin, theta) {\n    var x = this.x - origin.x;\n    var y = this.y - origin.y;\n    return new Vector(\n      x * Math.cos(theta) - y * Math.sin(theta) + origin.x,\n      x * Math.sin(theta) + y * Math.cos(theta) + origin.y\n    );\n  }\n\n\n  /**\n   * get the magnitude of this vector\n   * @return {number}\n   */\n  mag() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  /**\n   * get the magnitude sqr of this vector\n   * @return {number}\n   */\n  magSq() {\n    return (this.x * this.x + this.y * this.y);\n  }\n\n  /**\n   * set x, y of this vector\n   * @param {number} x \n   * @param {number} y \n   * @return {Vector}\n   */\n  setXY(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  /**\n   * set the magnitude of this vector\n   * @param {number} value \n   * @return {Vector}\n   */\n  setMag(value) {\n    this.normalize();\n    this.mult(value);\n    return this;\n  }\n\n  /**\n   * normalize this vector \n   * @return {Vector}\n   */\n  normalize() {\n    let m = this.mag();\n    if (m > 0) {\n      this.div(m);\n    }\n    return this;\n  }\n\n  /**\n   * normalize this vector to a specific length\n   * @param {number} length \n   * @return {Vector}\n   */\n  normalizeTo(length) {\n    var mag = this.mag();\n    if (mag > 0) {\n      mag = length / mag;\n      this.mult(mag);\n    }\n    return this;\n  }\n\n  /**\n   * limit this vector\n   * @param {number} max \n   * @return {Vector}\n   */\n  limit(max) {\n    if (this.mag() > max) {\n      this.normalize();\n      this.mult(max);\n    }\n    return this;\n  }\n\n  /**\n   * get heading of this vector in radians\n   * @return {number}\n   */\n  heading() {\n    return (-Math.atan2(-this.y, this.x));\n  }\n\n  /**\n   * get distance between this and specific vector\n   * @param {Vector} v \n   * @return {number}\n   */\n  dist(v) {\n    let dx = this.x - v.x;\n    let dy = this.y - v.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  /**\n   * get distance sqr between this and specific vector\n   * @param {Vector} v \n   * @return {number}\n   */\n  distSq(v) {\n    let dx = this.x - v.x;\n    let dy = this.y - v.y;\n    return (dx * dx + dy * dy);\n  }\n\n  /**\n   * copy this vector\n   * @return {Vector}\n   */\n  copy() {\n    return new Vector(this.x, this.y);\n  }\n\n  /**\n   * revert this vector\n   * @return {Vector}\n   */\n  negative() {\n    this.x = -this.x;\n    this.y = -this.y;\n    return this;\n  }\n\n  /**\n   * return an array representation of this vector\n   * @return {Array}\n   */\n  array() {\n    return [this.x, this.y];\n  }\n\n  /**\n   * return a string representation of this vector\n   * @return {String}\n   */\n  toString() {\n    return \"[\" + this.x + \", \" + this.y + \", \" + this.z + \"]\";\n  }\n\n  /**\n   * \n   * @param {Vector} v \n   * @return {Vector}\n   */\n  project(v) {\n    var coeff = ((this.x * v.x) + (this.y * v.y)) / ((v.x * v.x) + (v.y * v.y));\n    this.x = coeff * v.x;\n    this.y = coeff * v.y;\n    return this;\n  }\n\n  /**\n   * rotate this vector\n   * @param {number} a \n   */\n  rotate(a) {\n    var b = this.heading() + a;\n    var c = this.mag();\n    this.x = Math.cos(b) * c;\n    this.y = Math.sin(b) * c;\n  }\n}\n\nexport default Vector;", "class Point {\n  /**\n   * \n   * @param {number} x \n   * @param {number} y \n   * @param {number=} vx \n   * @param {number=} vy \n   * @param {number=} radius \n   */\n  constructor(x, y, vx, vy, radius) {\n    this.pos = new Vector(x, y);\n    this.oldpos = new Vector(x + (vx || 0), y + (vy || 0));\n    this.bounce = 0.99;\n    this.friction = 0.97;\n    this.groundFriction = 0.7;\n    this.gravity = new Vector(0, 1);\n    this.pinned = false;\n    this.radius = radius || 5;\n    this.color = '#e62a4f';\n    this.mass = 1;\n    this.sticks = [];\n    // this.behaviors = [];\n    this.forceAcc = 1;\n    this.uid = ''\n  }\n\n  /**\n   * \n   * @param {Vector} g \n   */\n  setGravity(g) {\n    this.gravity = g;\n    return this;\n  }\n  /**\n   * \n   * @param {number} f \n   */\n  setFriction(f) {\n    this.friction = f;\n    return this;\n  }\n  /**\n   * \n   * @param {number} f \n   */\n  setGroundFriction(f) {\n    this.groundFriction = f;\n    return this;\n  }\n  /**\n   * \n   * @param {number} b\n   */\n  setBounce(b) {\n    this.bounce = b;\n    return this;\n  }\n  /**\n   * \n   * @param {number} f \n   * @returns {Point}\n   */\n  setForceAcc(f) {\n    this.forceAcc = f;\n    return this;\n  }\n  /**\n   * \n   * @param {number} m \n   * @returns {Point}\n   */\n  setMass(m) {\n    this.mass = m;\n    return this;\n  }\n  /**\n   * \n   * @param {number} radius \n   * @returns {Point}\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    return this;\n  }\n\n  /**\n   * @param {string} color \n   * @returns {Point}\n   */\n  setColor(color) {\n    this.color = color;\n    return this;\n  }\n\n  /**\n   * @param {Vector} vel \n   * @returns {Point}\n   */\n  setVelocity(vel) {\n    this.oldpos.setXY(vel.x, vel.y);\n    return this;\n  }\n\n  /**\n   * @returns {Point}\n   */\n  pin() {\n    this.pinned = true;\n    return this;\n  }\n  /**\n   * @returns {Point}\n   */\n  unpin() {\n    this.pinned = false;\n    return this;\n  }\n\n  resetVelocity() {\n    this.oldpos.setXY(this.pos.x, this.pos.y);\n  }\n\n  /**\n   * \n   * @param {number} angle \n   * @param {number} offset \n   */\n  rotate(angle, offset) {\n    let x = offset.x + (this.pos.x - offset.x) * Math.cos(angle) - (this.pos.y - offset.y) * Math.sin(angle);\n    let y = offset.y + (this.pos.x - offset.x) * Math.sin(angle) + (this.pos.y - offset.y) * Math.cos(angle);\n    this.pos.setXY(x, y);\n  }\n\n  /**\n   * \n   * @param {Point} p \n   * @param {number} radius \n   * @param {number} strength \n   */\n  resolveBehaviors(p, radius = this.radius, strength = this.forceAcc) {\n    var delta = Vector.sub(this.pos, p.pos);\n    var dist = delta.magSq();\n\n    let magR = radius * radius;\n    if (dist < magR) {\n      var f = delta.normalizeTo(1 - (dist / magR)).mult(strength);\n      this.applyForce(f);\n    }\n  }\n\n  /**\n   * \n   * @param {number|Vector} f \n   */\n  applyForce(f) {\n    this.pos.add(f);\n  }\n\n  /**\n   * \n   * @param {number} x \n   * @param {number} y \n   * @param {number} time \n   * @param {number} radius \n   * @param {number} speed \n   */\n  addMotor(x, y, time, radius, speed) {\n    this.pos.x = x + radius * Math.cos(time * speed);\n    this.pos.y = y + radius * Math.sin(time * speed);\n  }\n\n  /**\n   * @param {Verly} verlyInstance \n   */\n  constrain(verlyInstance) {\n    // if (this.pos.y > HEIGHT - 1) {\n    //   this.pos.y = HEIGHT - 1;\n    // }\n    // if (this.pos.x < 0) {\n    //   this.pos.x = 0;\n    // }\n    // if (this.pos.x > WIDTH - 1) {\n    //   this.pos.x = WIDTH - 1;\n    // }\n    // let vel = Vector.sub(this.pos, this.oldpos);\n    if (this.pos.x > verlyInstance.WIDTH - this.radius) {\n      this.pos.x = verlyInstance.WIDTH - this.radius;\n      // this.oldpos.x = (this.pos.x + vel.x) * this.bounce;\n    }\n    if (this.pos.x < this.radius) {\n      this.pos.x = this.radius;\n      // this.oldpos.x = (this.pos.x + vel.x) * this.bounce;\n    }\n    if (this.pos.y > verlyInstance.HEIGHT - this.radius) {\n      this.pos.y = verlyInstance.HEIGHT - this.radius;\n      // this.oldpos.y = (this.pos.y + vel.y) * this.bounce;\n    }\n    if (this.pos.y < this.radius) {\n      this.pos.y = this.radius;\n      // this.oldpos.y = (this.pos.y + vel.y) * this.bounce;\n    }\n  };\n\n\n  /**\n   * @param {Verly} verlyInstance \n   */\n  update(verlyInstance) {\n    if (this.pinned) return;\n    let vel = Vector.sub(this.pos, this.oldpos);\n    vel.mult(this.friction);\n    // if the point touches the ground set groundFriction\n    if (this.pos.y >= verlyInstance.HEIGHT - this.radius && vel.magSq() > 0.000001) {\n      var m = vel.mag();\n      vel.x /= m;\n      vel.y /= m;\n      vel.mult(m * this.groundFriction);\n    }\n    this.oldpos.setXY(this.pos.x, this.pos.y);\n    this.pos.add(vel);\n    this.pos.add(this.gravity);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx \n   */\n  render(ctx) {\n    ctx.beginPath();\n    ctx.fillStyle = this.color;\n    ctx.arc(this.pos.x, this.pos.y, this.radius, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.closePath();\n  }\n}\n\n\nexport default Point;", "class Stick {\n  /**\n   * creates a stick between two Point\n   * takes optional length and stiffness \n   * @param {Point} p1 \n   * @param {Point} p2 \n   * @param {number=} length \n   * @param {number=} stiffness \n   * @param {boolean=} hidden \n   */\n  constructor(p1, p2, length, stiffness, hidden) {\n    this.startPoint = p1;\n    this.endPoint = p2;\n    this.stiffness = stiffness || 2;\n    this.color = '#f5476a';\n    this.hidden = hidden;\n    if (!length) {\n      this.length = this.startPoint.pos.dist(this.endPoint.pos);\n    } else {\n      this.length = length;\n    }\n    this.startPoint.sticks.push(this);\n    this.endPoint.sticks.push(this);\n  }\n\n  /**\n   * \n   * @param {number=} stepCoef \n   */\n  update(stepCoef) {\n    // not gonna use vectors for performance optimization\n    // let dx = this.endPoint.pos.x - this.startPoint.pos.x;\n    // let dy = this.endPoint.pos.y - this.startPoint.pos.y;\n    // let dist = Math.sqrt(dx * dx + dy * dy);\n    // let diff = this.length - dist;\n    // let percent = diff / dist / 2;\n    // let offsetx = (dx * percent);\n    // let offsety = (dy * percent);\n    // if (!this.startPoint.pinned) {\n    //   this.startPoint.pos.x -= offsetx;\n    //   this.startPoint.pos.y -= offsety;\n    // }\n    // if (!this.endPoint.pinned) {\n    //   this.endPoint.pos.x += offsetx;\n    //   this.endPoint.pos.y += offsety;\n    // }\n    // ----- algo two\n\n    // algo three\n    let dx = this.endPoint.pos.x - this.startPoint.pos.x;\n    let dy = this.endPoint.pos.y - this.startPoint.pos.y;\n    let dist = Math.sqrt(dx * dx + dy * dy);\n    let diff = (this.length - dist) / dist * this.stiffness;\n\n    let offsetx = dx * diff * 0.5;\n    let offsety = dy * diff * 0.5;\n\n    // calculate mass\n    let m1 = this.startPoint.mass + this.endPoint.mass;\n    let m2 = this.startPoint.mass / m1;\n    m1 = this.endPoint.mass / m1;\n\n    if (!this.startPoint.pinned) {\n      this.startPoint.pos.x -= offsetx * m1;\n      this.startPoint.pos.y -= offsety * m1;\n    }\n    if (!this.endPoint.pinned) {\n      this.endPoint.pos.x += offsetx * m2;\n      this.endPoint.pos.y += offsety * m2;\n    }\n\n    \n    // calculate mass\n    // var m1 = this.startPoint.mass + this.endPoint.mass;\n    // var m2 = this.startPoint.mass / m1;\n    // m1 = this.endPoint.mass / m1;\n    \n    // var normal = Vector.sub(this.startPoint.pos, this.endPoint.pos);\n    // var m = normal.magSq();\n    // let diff = ((this.length * this.length) - m);\n    // normal.mult((diff / m) * this.stiffness * stepCoef);\n    \n    // if (!this.startPoint.pinned) {\n    //   this.startPoint.pos.add(normal);\n    // }\n    // if (!this.endPoint.pinned) {\n    //   this.endPoint.pos.sub(normal);\n    // }\n  }\n\n  /**\n   * @param {string} color\n   * @returns {Stick}\n   */\n  setColor(color) {\n    this.color = color;\n    return this;\n  }\n\n  /**\n   * @param {number} length\n   * @returns {Stick}\n   */\n  setLength(length) {\n    this.length = length;\n    return this;\n  }\n\n  /**\n   * @param {number} value\n   * @returns {Stick}\n   */\n  setStiffness(value) {\n    this.stiffness = value;\n    return this;\n  }\n\n  /**\n   * @param {boolean} value\n   * @returns {Stick}\n   */\n  setHidden(value) {\n    this.hidden = value;\n    return this;\n  }\n\n  /**\n   * \n   * @param {CanvasRenderingContext2D} ctx \n   */\n  render(ctx) {\n    if (this.hidden) return;\n    ctx.beginPath();\n    ctx.strokeStyle = this.color;\n    ctx.moveTo(this.startPoint.pos.x, this.startPoint.pos.y);\n    ctx.lineTo(this.endPoint.pos.x, this.endPoint.pos.y);\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nexport default Stick;\n", "class AngleStick {\n  /**\n   * \n   * @param {Point} a \n   * @param {Point} b \n   * @param {Point} c \n   * @param {number} stiffness \n   */\n  constructor(a, b, c, stiffness) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.angle = this.b.pos.angle2(this.a.pos, this.c.pos);\n    this.stiffness = stiffness;\n  }\n  \n  /**\n   * \n   */\n  update() {\n    var angle = this.b.pos.angle2(this.a.pos, this.c.pos);\n    // get the angle difference\n    var diff = angle - this.angle;\n    if (diff <= -Math.PI)\n      diff += 2 * Math.PI;\n    else if (diff >= Math.PI)\n      diff -= 2 * Math.PI;\n    diff *= 0.1 * this.stiffness;\n\n    this.a.pos = this.a.pos.rotateBy(this.b.pos, diff);\n    this.c.pos = this.c.pos.rotateBy(this.b.pos, -diff);\n    this.b.pos = this.b.pos.rotateBy(this.a.pos, diff);\n    this.b.pos = this.b.pos.rotateBy(this.c.pos, -diff);\n  }\n\n  /**\n   * \n   * @param {CanvasRenderingContext2D} ctx \n   */\n  render(ctx) {\n    ctx.beginPath();\n    ctx.moveTo(this.a.pos.x, this.a.pos.y);\n    ctx.lineTo(this.b.pos.x, this.b.pos.y);\n    ctx.lineTo(this.c.pos.x, this.c.pos.y);\n    var tmp = ctx.lineWidth;\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = \"rgba(0, 0, 255, 0.5)\";\n    ctx.stroke();\n    ctx.lineWidth = tmp;\n  }\n}\n\nexport default AngleStick;", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;", "import { v4 } from \"uuid\";\nimport Vector from \"./Vector\";\n\nclass Entity {\n  /**\n   * @param {number} iterations\n   * @param {Verly} verlyInstance\n   */\n  constructor(iterations, verlyInstance, name) {\n    this.points = [];\n    this.sticks = [];\n    this.domNodes = [];\n    this.name = name;\n    this.verlyInstance = verlyInstance;\n    this.iterations = iterations || 16;\n  }\n\n  /**\n   * @param {HTMLElement} node\n   * @param {typeof import('./Vector')} p\n   */\n  updateDOMNodePosition(node, p) {\n    if (!node) return;\n    node.style.left = `${p.pos.x}px`;\n    node.style.top = `${p.pos.y - 1}px`;\n  }\n\n  findActiveFocusedNode() {\n    let nodeId = document.activeElement.getAttribute(\"data-nodeid\");\n    if (!nodeId) return null;\n\n    const foundNode = this.points.find((p) => p.uid === nodeId);\n    if (!foundNode) return null;\n\n    return foundNode;\n  }\n\n  /**\n   * @param {KeyboardEvent} event\n   */\n  handleKeyDown(event) {\n    const foundNode = this.findActiveFocusedNode();\n    if (!foundNode) return;\n\n    const isFaster = !!event.shiftKey;\n    const velocityMultiplier = isFaster ? 5 : 1;\n    const keyMap = {\n      ArrowLeft: () => {\n        this.setVelocityToPoint(foundNode, -velocityMultiplier, 0);\n      },\n      ArrowRight: () => {\n        this.setVelocityToPoint(foundNode, velocityMultiplier, 0);\n      },\n      ArrowUp: () => {\n        this.setVelocityToPoint(foundNode, 0, -velocityMultiplier);\n      },\n      ArrowDown: () => {\n        this.setVelocityToPoint(foundNode, 0, velocityMultiplier);\n      },\n    };\n\n    if (keyMap[event.key]) {\n      foundNode.pin();\n      keyMap[event.key]();\n    }\n  }\n\n  /**\n   * @param {KeyboardEvent} event\n   */\n  handleKeyUp(event) {\n    const foundNode = this.findActiveFocusedNode();\n    if (!foundNode) return;\n\n    foundNode.resetVelocity();\n    if (event.key === ' ') {\n      foundNode.unpin()\n    }\n  }\n\n  setupAccessibility() {\n    window.addEventListener(\"keydown\", this.handleKeyDown.bind(this));\n    window.addEventListener(\"keyup\", this.handleKeyUp.bind(this));\n    this.points.forEach((p, i) => {\n      let node = document.createElement(\"div\");\n      node.tabIndex = 0;\n      node.setAttribute(\"data-nodeid\", p.uid);\n      node.setAttribute(\"aria-label\", `Point of ${this.name}, use arrow keys to move point, press space to unpin`);\n      node.classList.add(\"point\");\n      this.updateDOMNodePosition(node, p);\n      document.body.appendChild(node);\n      this.domNodes.push(node);\n    });\n  }\n\n  /**\n   * sets the gravity of this entity\n   * @param {Vector} g\n   */\n  setGravity(g) {\n    for (let i = 0; i < this.points.length; i++) {\n      this.points[i].setGravity(g);\n    }\n  }\n\n  /**\n   * sets the friction of this entity\n   * @param {number} f\n   */\n  setFriction(f) {\n    for (let i = 0; i < this.points.length; i++) {\n      this.points[i].setFriction(f);\n    }\n  }\n\n  /**\n   * pin a specific Point\n   * @param {number} index\n   */\n  pin(index) {\n    this.points[index].pin();\n  }\n\n  /**\n   * remove a specific Point\n   * @param {Point} p\n   */\n  removeSticks(p) {\n    this.sticks.splice(this.sticks.indexOf(p.sticks[0]), 1);\n    p.sticks.splice(0, 1);\n  }\n\n  /**\n   *\n   * @param {typeof import('./Point').default} point\n   * @param {Number} x\n   * @param {Number} y\n   */\n  setVelocityToPoint(point, x, y) {\n    point.applyForce(new Vector(x, y));\n  }\n\n  /**\n   *\n   * @param {Number} x\n   * @param {Number} y\n   */\n  setVelocity(x, y) {\n    this.points.map((e) => {\n      e.oldpos.x += x;\n      e.oldpos.y += y;\n    });\n  }\n\n  /**\n   * adds a Point in points array with {x,y,vx,vy,radius}\n   * @param {Number|Point} x\n   * @param {Number=} y\n   * @param {Number=} vx\n   * @param {Number=} vy\n   * @param {Number=} radius\n   * @returns {Point}\n   */\n  addPoint(x, y, vx, vy, radius) {\n    let uid = v4();\n    let p;\n    if (x instanceof Point) {\n      p = x;\n    } else {\n      p = new Point(x, y, vx, vy, radius);\n    }\n    p.uid = uid;\n    this.points.push(p);\n    return p;\n  }\n\n  /**\n   * adds a stick inbetween two points\n   * @param {number|Point} p1\n   * @param {number|Point=} p2\n   * @param {number=} length\n   * @param {number=} stiffness\n   * @param {boolean=} ishidden\n   */\n  addStick(p1, p2, length, stiffness, ishidden) {\n    let stick;\n    if (p1 instanceof Stick) {\n      stick = p1;\n    } else {\n      stick = new Stick(\n        this.points[p1],\n        this.points[p2],\n        length,\n        stiffness,\n        ishidden\n      );\n    }\n    this.sticks.push(stick);\n    return stick;\n  }\n\n  /**\n   * adds a AngleStick in between 3 points\n   * @param {Point} p1\n   * @param {Point} p2\n   * @param {Point} p3\n   * @param {number} stiffness\n   * @returns {AngleStick}\n   */\n  addAngleStick(p1, p2, p3, stiffness) {\n    let stick;\n    if (p1 instanceof AngleStick) {\n      stick = p1;\n    } else {\n      stick = new AngleStick(\n        this.points[p1],\n        this.points[p2],\n        this.points[p3],\n        stiffness\n      );\n    }\n    this.sticks.push(stick);\n    return stick;\n  }\n\n  /**\n   *\n   */\n  updatePoints() {\n    for (let i = 0; i < this.points.length; i++) {\n      this.points[i].update(this.verlyInstance);\n      this.updateDOMNodePosition(this.domNodes[i], this.points[i]);\n    }\n  }\n\n  /**\n   * @methdo updateSticks\n   * @param {Number=} stepCoef\n   */\n  updateSticks(stepCoef) {\n    for (let i = 0; i < this.sticks.length; i++) {\n      this.sticks[i].update(stepCoef);\n    }\n  }\n\n  /**\n   */\n  updateConstraints() {\n    for (let i = 0; i < this.points.length; i++) {\n      this.points[i].constrain(this.verlyInstance);\n    }\n  }\n\n  /**\n   */\n  update() {\n    // var stepCoef = 1 / this.iterations;\n    this.updatePoints();\n    for (let j = 0; j < this.iterations; ++j) {\n      this.updateSticks();\n      this.updateConstraints();\n    }\n  }\n\n  /**\n   */\n  renderPoints() {\n    for (let i = 0; i < this.points.length; i++) {\n      this.points[i].render(this.verlyInstance.ctx);\n    }\n  }\n\n  /**\n   */\n  renderSticks() {\n    for (let i = 0; i < this.sticks.length; i++) {\n      this.sticks[i].render(this.verlyInstance.ctx);\n    }\n  }\n\n  /**\n   */\n  renderPointIndex() {\n    for (let i = 0; i < this.points.length; i++) {\n      this.verlyInstance.ctx.beginPath();\n      this.verlyInstance.ctx.fillStyle = \"black\";\n      this.verlyInstance.ctx.fillText(\n        i,\n        this.points[i].pos.x + 5,\n        this.points[i].pos.y - 6\n      );\n      this.verlyInstance.ctx.closePath();\n    }\n  }\n\n  /**\n   */\n  render() {\n    this.renderPoints();\n    this.renderSticks();\n  }\n}\n\nexport default Entity;\n\n// join(...args) {\n//   let points = [];\n//   let sticks = [];\n\n//   // loop through the args and push points and sticks to the array\n//   for (let i = 0; i < args.length; i++) {\n//     points.push(args[i].points);\n//     sticks.push(args[i].sticks);\n//   }\n\n//   // join multiple arrays\n//   points = [].concat.apply([], points);\n//   sticks = [].concat.apply([], sticks);\n\n//   // add the arrays to the mix::Entity\n//   this.points = points;\n//   this.sticks = sticks;\n\n//   return this; // return for chaining\n// }\n", "class TypoGraphy {\n  /**\n   * \n   * @param {number} x \n   * @param {number} y \n   * @param {number} size \n   * @param {string} letter \n   * @param {Verly} verlyInstance \n   */\n  constructor(x, y, size, letter, verlyInstance) {\n    this.x = x;\n    this.y = y;\n    this.size = size;\n    this.stickDistance = this.size;\n    this.iterations = 50;\n    // A\n    this.A = [\n      [0, 0, 1, 0, 0],\n      [0, 1, 1, 1, 0],\n      [0, 1, 0, 1, 0],\n      [1, 1, 1, 1, 1],\n      [1, 0, 0, 0, 1]\n    ]\n    // B\n    this.B = [\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 1, 0],\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 1, 0],\n      [1, 1, 1, 0, 0]\n    ]\n\n    // C\n    this.C = [\n      [1, 1, 1, 1, 0],\n      [1, 1, 1, 1, 0],\n      [1, 1, 0, 0, 0],\n      [1, 1, 1, 1, 0],\n      [1, 1, 1, 1, 0]\n    ]\n\n    // D\n    this.D = [\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 1, 0],\n      [1, 1, 1, 1, 0],\n      [1, 1, 1, 1, 0],\n      [1, 1, 1, 0, 0]\n    ];\n\n    // E\n    this.E = [\n      [0, 1, 1, 1, 0],\n      [0, 1, 1, 0, 0],\n      [0, 1, 1, 1, 0],\n      [0, 1, 1, 0, 0],\n      [0, 1, 1, 1, 0]\n    ]\n\n    // S\n    this.S = [\n      [0, 1, 1, 1, 0],\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 1, 0],\n      [0, 1, 1, 1, 0],\n      [1, 1, 1, 0, 0]\n    ]\n\n    // I \n    this.I = [\n      [0, 0, 1, 0, 0],\n      [0, 1, 1, 1, 0],\n      [0, 1, 1, 1, 0],\n      [0, 1, 1, 1, 0],\n      [0, 1, 1, 1, 0]\n    ]\n\n\n    // K\n    this.K = [\n      [1, 0, 1, 1, 0],\n      [1, 1, 1, 0, 0],\n      [1, 1, 0, 0, 0],\n      [1, 1, 1, 0, 0],\n      [1, 0, 1, 1, 0]\n    ]\n\n    // U\n    this.U = [\n      [1, 1, 0, 1, 1],\n      [1, 1, 0, 1, 1],\n      [1, 1, 0, 1, 1],\n      [1, 1, 1, 1, 1],\n      [0, 1, 1, 1, 0]\n    ]\n\n    // N\n    this.N = [\n      [0, 0, 0, 0, 0, 0],\n      [1, 1, 0, 0, 1, 1],\n      [1, 1, 1, 0, 1, 1],\n      [1, 1, 1, 1, 1, 1],\n      [1, 1, 0, 1, 1, 1],\n      [1, 1, 0, 0, 1, 1]\n    ]\n\n    // R\n    this.R = [\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 1, 0],\n      [1, 1, 1, 1, 0],\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 1, 0]\n    ]\n\n    // G\n    this.G = [\n      [0, 1, 1, 1, 0],\n      [1, 1, 1, 0, 0],\n      [1, 1, 0, 1, 1],\n      [1, 1, 1, 1, 1],\n      [0, 1, 1, 1, 0]\n    ]\n\n    // L\n    this.L = [\n      [1, 1, 0, 0, 0],\n      [1, 1, 0, 0, 0],\n      [1, 1, 0, 0, 0],\n      [1, 1, 1, 1, 1],\n      [1, 1, 1, 1, 1]\n    ]\n\n    // Y\n    this.Y = [\n      [1, 1, 0, 1, 1],\n      [1, 1, 0, 1, 1],\n      [0, 1, 1, 1, 0],\n      [0, 1, 1, 1, 0],\n      [0, 1, 1, 1, 0]\n    ]\n\n    // V\n    this.V = [\n      [1, 0, 0, 0, 1],\n      [1, 1, 0, 1, 1],\n      [1, 1, 0, 1, 1],\n      [1, 1, 1, 1, 1],\n      [0, 1, 1, 1, 0]\n    ]\n\n    //X\n    this.X = [\n      [1, 1, 1, 1, 1],\n      [1, 1, 1, 1, 1],\n      [1, 1, 1, 1, 1],\n      [1, 1, 1, 1, 1],\n      [1, 1, 1, 1, 1]\n    ]\n\n    //P\n    this.P = [\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 1, 0],\n      [1, 1, 1, 1, 0],\n      [1, 1, 1, 0, 0],\n      [1, 1, 1, 0, 0]\n    ]\n\n    //H\n    this.H = [\n      [1, 1, 0, 1, 1],\n      [1, 1, 0, 1, 1],\n      [1, 1, 1, 1, 1],\n      [1, 1, 0, 1, 1],\n      [1, 1, 0, 1, 1]\n    ]\n\n    //O\n    this.O = [\n      [0, 1, 1, 1, 0],\n      [1, 1, 0, 1, 1],\n      [1, 1, 0, 1, 1],\n      [1, 1, 0, 1, 1],\n      [0, 1, 1, 1, 0]\n    ]\n\n    this.letters = {\n      A: this.A,\n      B: this.B,\n      C: this.C,\n      D: this.D,\n      E: this.E,\n      K: this.K,\n      I: this.I,\n      S: this.S,\n      U: this.U,\n      N: this.N,\n      R: this.R,\n      G: this.G,\n      L: this.L,\n      Y: this.Y,\n      V: this.V,\n      X: this.X,\n      P: this.P,\n      H: this.H,\n      O: this.O,\n    }\n\n\n    let gridArray = this.letters[letter];\n\n    this.text = new Entity(this.iterations, verlyInstance);\n    // this.text.renderPoints = function() {};\n\n    for (let x = 0; x < gridArray.length; x++) {\n      for (let y = 0; y < gridArray[x].length; y++) {\n        if (gridArray[y][x] == 1) {\n          let p = new Point(this.x + x * this.size, this.y + y * this.size);\n          p.setRadius(2);\n          this.text.addPoint(p);\n        }\n      }\n    }\n\n    // join\n    for (let i = 0; i < this.text.points.length; i++) {\n      for (let j = 0; j < this.text.points.length; j++) {\n        if (this.text.points[i] == this.text.points[j]) break;\n        let d = this.text.points[i].pos.dist(this.text.points[j].pos);\n\n        if (d > 0 && d < this.size + this.stickDistance) {\n          this.text.addStick(i, j);\n        }\n      }\n    }\n  }\n}\n\nexport default TypoGraphy;", "import {\n  random,\n  radians,\n  degrees,\n  clamp,\n  normalizedRandom,\n  lerp\n} from './Utils';\n\nimport Verly from './Verly';\nimport Vector from './Vector';\nimport Point from './Point';\nimport Stick from './Stick';\nimport AngleStick from './AngleStick';\nimport Entity from './Entity';\nimport TypoGraphy from './TypoGraphy';\n\nwindow.Verly = Verly;\nwindow.Vector = Vector;\nwindow.Point = Point;\nwindow.Stick = Stick;\nwindow.AngleStick = AngleStick;\nwindow.Entity = Entity;\nwindow.TypoGraphy = TypoGraphy;\n\n// utils\nwindow.random = random;\nwindow.radians = radians;\nwindow.degrees = degrees;\nwindow.clamp = clamp;\nwindow.normalizedRandom = normalizedRandom;\nwindow.lerp = lerp;\n\nexport default Verly;"],
  "mappings": "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d,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,CAChB,EAGA,KAAK,EAAI,CACP,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,CAChB,EAGA,KAAK,EAAI,CACP,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,CAChB,EAGA,KAAK,EAAI,CACP,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,CAChB,EAGA,KAAK,EAAI,CACP,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,CAChB,EAIA,KAAK,EAAI,CACP,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,CAChB,EAGA,KAAK,EAAI,CACP,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACd,CAAC,EAAG,EAAG,EAAG,EA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",
  "names": ["normalizedRandom", "clamp", "value", "min", "max", "random", "rand", "lerp", "a", "b", "p", "radians", "degrees", "Mouse", "entities", "canvas", "ctx", "offset", "point", "d", "p", "k", "i", "Verly", "iterations", "canvas", "ctx", "Mouse", "scaleFactor", "width", "height", "oldScale", "backupScale", "backup", "args", "mixEntity", "points", "sticks", "i", "index", "e", "x", "y", "w", "h", "box", "segments", "radius", "stride1", "stride2", "hexagon", "stride", "theta", "center", "posx", "posy", "pinOffset", "cloth", "xStride", "yStride", "px", "py", "tear", "threshold", "gap", "pin", "rope", "x0", "y0", "ragdoll", "Verly_default", "Vector", "_Vector", "x", "y", "v1", "v2", "angle", "v", "a", "b", "len", "vLeft", "vRight", "origin", "theta", "value", "m", "length", "mag", "max", "dx", "dy", "coeff", "c", "Vector_default", "Point", "x", "y", "vx", "vy", "radius", "g", "f", "b", "m", "color", "vel", "angle", "offset", "p", "strength", "delta", "dist", "magR", "time", "speed", "verlyInstance", "ctx", "Point_default", "Stick", "p1", "p2", "length", "stiffness", "hidden", "stepCoef", "dx", "dy", "dist", "diff", "offsetx", "offsety", "m1", "m2", "color", "value", "ctx", "Stick_default", "AngleStick", "a", "b", "c", "stiffness", "angle", "diff", "ctx", "tmp", "AngleStick_default", "getRandomValues", "rnds8", "rng", "byteToHex", "i", "unsafeStringify", "arr", "offset", "randomUUID", "native_default", "v4", "options", "buf", "offset", "native_default", "rnds", "rng", "i", "unsafeStringify", "v4_default", "Entity", "iterations", "verlyInstance", "name", "node", "p", "nodeId", "foundNode", "event", "velocityMultiplier", "keyMap", "g", "f", "index", "point", "x", "y", "Vector_default", "e", "vx", "vy", "radius", "uid", "v4_default", "p1", "p2", "length", "stiffness", "ishidden", "stick", "p3", "i", "stepCoef", "j", "Entity_default", "TypoGraphy", "x", "y", "size", "letter", "verlyInstance", "gridArray", "p", "i", "j", "d", "TypoGraphy_default", "Verly_default", "Vector_default", "Point_default", "Stick_default", "AngleStick_default", "Entity_default", "TypoGraphy_default", "random", "radians", "degrees", "clamp", "normalizedRandom", "lerp", "app_default"]
}
